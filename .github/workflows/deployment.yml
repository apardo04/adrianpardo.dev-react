name: Push to ECR/Deploy to server

on:
  push:
    branches:
      - master

jobs:
  test:
      runs-on: ubuntu-latest
  
      strategy:
        matrix:
          node-version: [16.x]
  
      steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install
        run: npm install
      - name: npm test
        run: CI=true npm test
        env:
          CI: true

  ecr:
    needs: test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
        
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: adrianpardo.dev
        #IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:latest"

  ssh-deployment:
    needs: ecr
    runs-on: ubuntu-latest

    steps:
      - name: SSH Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          debug: true
          script_stop: true
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd /var/www/adrianpardo.dev-react/
            git reset --hard
            git pull
            npm install --only=prod
            npm run build
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 848358406428.dkr.ecr.us-east-1.amazonaws.com
            docker-compose pull
            docker-compose stop
            docker-compose rm -f
            docker-compose up -d

  load-test:
    needs: ssh-deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Simple Load Test
        uses: apardo04/locust-github-action@master
        with:
          LOCUSTFILE: "locustfile.py"
          URL:  "https://adrianpardo.dev"
          USERS: "5"
          RATE: "5"
          RUNTIME: "5s"
